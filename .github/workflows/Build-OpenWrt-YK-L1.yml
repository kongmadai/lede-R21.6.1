name: Build OpenWrt-YK-L1

on: 
  release:
    types: [published]
#  push:
#    branches: 
#      - main
#    paths:
#      - 'yk.config'
  workflow_dispatch:
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]

env:
  REPO_URL: https://github.com/kongmadai/lede-R21.6.1
  REPO_BRANCH: main
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_RELEASE: true

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        sudo -E apt-get -qq update
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        cat feeds.conf.default

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Get uploadUrl
      run: |
        uploadurl=`curl -s  https://api.github.com/repos/kongmadai/lede-R21.6.1/releases/latest | sed -n '/upload_url/p' |  cut -d '"' -f 4`
        df -h
        pwd
        echo $uploadurl
        echo "UPLOADURL=$uploadurl" >> $GITHUB_ENV

    - name: Load ykl1 configuration
      env:
        CONFIG_FILE: 'yk.config'
        DIY_SH: 'yk.sh'
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

    - name: Download ykl1 package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Multi-thread compile ykl1
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "compile yk-l1 success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Load K2 configuration
      env:
        CONFIG_FILE: 'k2.config'
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt
        make defconfig

    - name: Download K2 package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Multi-thread compile K2
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: 7620_bin
        path: /home/runner/work/lede-R21.6.1/lede-R21.6.1/openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd /home/runner/work/lede-R21.6.1/lede-R21.6.1/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
 
#    - name: Organize files
#      id: organize
#      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
#      run: |
#        cd   /usr/share/zoneinfo/Asia/
#        rm -rf packages
#        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
#        echo "::set-output name=status::success"
        
#    - name: Upload firmware directory
#      uses: actions/upload-artifact@main
#      if: steps.organize.outputs.status == 'success' && !cancelled()
#      with:
#        #name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
#        name: Shanghai
#        path: ${{ env.FIRMWARE }}

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        #name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        name: Youku_L1-19.07.4-r211024-squashfs-sysupgrade.bin
        path: ${{ env.FIRMWARE }}
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        #name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        name: K2-19.07.4-r211024-squashfs-sysupgrade.bin
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"


#    - name: Upload ykl1 Release Asset
#      uses: actions/upload-release-asset@v1.0.1
#      env:
#        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
#      with:
#        upload_url: ${{ env.UPLOADURL }}
#        asset_path: /home/runner/work/lede-R21.6.1/lede-R21.6.1/openwrt/bin/targets/ramips/mt7620/openwrt-19.07.4-r211024-ramips-mt7620-youku_yk1-squashfs-sysupgrade.bin
#        asset_name: Youku_L1-19.07.4-r211024-squashfs-sysupgrade.bin
#        asset_content_type: application/octet-stream

#    - name: Upload K2 Release Asset
#      uses: actions/upload-release-asset@v1.0.1
#      env:
#        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
#      with:
#        upload_url: ${{ env.UPLOADURL }}
#        asset_path: /home/runner/work/lede-R21.6.1/lede-R21.6.1/openwrt/bin/targets/ramips/mt7620/openwrt-19.07.4-r211024-ramips-mt7620-phicomm_psg1218a-squashfs-sysupgrade.bin
#        asset_name: K2-19.07.4-r211024-squashfs-sysupgrade.bin
#        asset_content_type: application/octet-stream

    - name: Compress Soft Package
      run: |
        cd openwrt
        rm ./bin/targets/ramips/mt7620/*.bin
        tar -zcvf 7620Packages.tar.gz ./bin/
        echo "Compress success!"   

 #   - name: Upload 7620Packages Release Asset
 #     uses: actions/upload-release-asset@v1.0.1
 #     env:
 #       GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
 #     with:
 #       upload_url: ${{ env.UPLOADURL }}
 #       asset_path: /home/runner/work/lede-R21.6.1/lede-R21.6.1/openwrt/7620Packages.tar.gz
 #       asset_name: 7620Packages.tar.gz
 #       asset_content_type: application/octet-stream

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "ðŸ”— [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
